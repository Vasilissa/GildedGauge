(ns gilded-gauge.scrape
  (:require [clojure.data.json :as json]
            [clojure.java.io :as io]
            [clojure.pprint :refer [pprint]]))


(def url "http://www.forbes.com/ajax/list/data?year=2015&uri=billionaires&type=person")
(def take-n 50)

(defn pred [m]
  (when-let [p (:position m)]
    (<= p take-n)))

(defn scale [n]
  (/ n 1000))


(with-open [w (-> "src/gilded_gauge/rankings.clj" io/file io/writer)]
  (binding [*out* w]
    (let [rankings
          (->>
            (json/read-str (slurp url) :key-fn keyword)
            (filter pred)
            (sort-by :position)
            (map #(select-keys % [:name :worth]))
            (map #(update % :worth scale))
            (map (juxt :name :worth))
            vec)]
      (pprint `(~'ns gilded-gauge.rankings "Autogenerated namespace"))
      (pprint `(def ~'rankings ~rankings)))))
